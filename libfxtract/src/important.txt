/*
time g++ -std=c++17 -O3 -O0 main.cpp model/*.cpp view/*.cpp -o HelloWt -L/usr/local/lib64/ -lwt -lwthttp -lwtdbo -lwtdbosqlite3 -lboost_system -lpthread -lstdc++fs

gcc -Wall -I -O3 -O0 main.cpp model/*.cpp view/*.cpp -o HelloWt  -L/usr/local/lib64/ -lwt -lwthttp -lwtdbo -lwtdbosqlite3 -lboost_system -lpthread -lstdc++fs  libfxtract/src/*.cpp /usr/local/include/opencascade/ -L/usr/local/lib/ -lTKIGES -lTKSTEP -lTKXSBase -lTKBO -lTKBRep -lTKBool -lTKFeat -lTKFillet -lTKG2d -lTKG3d -lTKGeomAlgo -lTKGeomBase -lTKHLR -lTKMath -lTKMesh -lTKOffset -lTKPrim -lTKShHealing -lTKTopAlgo -lTKXMesh -lTKernel -lstdc++  -lTKTopAlgo -lTKBRep -ltk -ltcl -lGL -ltbb -lXmu -lgl2ps -lm -Wl,-R/usr/local/lib

valgrind ./test ../model\ test\ files/new/90.IGS --track-origins=yes --leak-check=full

*/

set(Headers
  include/ModelUtils.h
  include/MFace.h
  include/StepProcessor.h
  include/IgesProcessor.h
  include/ModelApp.h
  include/ModelEdge.h
  include/ModelReader.h
  include/ModelFace.h
  include/ModelBend.h
  include/Model.h
  include/ModelMath.h
)

set(Sources
  src/ModelUtils.cpp
  src/MFace.cpp
  src/StepProcessor.cpp
  src/IgesProcessor.cpp
  src/ModelApp.cpp
  src/ModelEdge.cpp
  src/ModelReader.cpp
  src/ModelFace.cpp
  src/ModelBend.cpp
  src/Model.cpp
  src/ModelMath.cpp
)

set(THREADS_PREFER_PTHREAD_FLAG ON)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -lTKTopAlgo -lTKBRep -lTKernel -ltk -ltcl -lGL -ltbb -lXmu -lgl2ps -lm -Wl,-R/usr/local/lib")

find_package(Threads REQUIRED)
find_package(OpenCASCADE REQUIRED)

add_library(fxtract STATIC ${Sources} ${Headers})
target_compile_features(fxtract PUBLIC cxx_std_17)
set_target_properties(fxtract PROPERTIES CXX_EXTENSIONS OFF)
target_include_directories(fxtract PUBLIC ${Boost_INCLUDE_DIRS} ${OpenCASCADE_INCLUDE_DIR})
target_link_libraries(fxtract tk tcl ${Boost_LIBRARIES} Threads::Threads ${OpenCASCADE_LIBRARIES})
